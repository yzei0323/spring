HTTP(Hypertext Transfer Protocol)는 웹에서 클라이언트와 서버 간의 데이터 통신을 위한 프로토콜 
 

1. HTTP의 기본 개념
클라이언트와 서버: 클라이언트(예: 웹 브라우저)는 서버에 요청(request)을 보내고, 서버는 응답(response)을 반환 
요청/응답 모델: HTTP는 요청-응답 구조로 동작하며, 클라이언트가 서버에 특정 작업을 요청하고, 서버가 그에 대한 결과를 반환 
2. HTTP 메서드
HTTP는 여러 가지 메서드를 사용하여 요청을 보낼 수 있음 

GET: 서버에서 데이터를 가져오기 위해 사용. 요청 시 URL에 데이터를 포함할 수 있음.
POST: 서버에 데이터를 제출하기 위해 사용. 주로 폼 제출에 사용됨.
PUT: 서버의 리소스를 업데이트하는 데 사용.
DELETE: 서버에서 특정 리소스를 삭제하는 데 사용.
HEAD: GET 요청과 유사하지만 응답 본문 없이 헤더만 가져옴.



3. HTTP 응답 상태 코드
서버는 요청의 처리 결과를 나타내는 상태 코드를 반환합니다. 대표적인 상태 코드 

200 OK: 요청이 성공적으로 처리됨.
302 리다이렉트 , 서버가 응답한 주소로 재요청 
404 Not Found: 요청한 리소스를 찾을 수 없음.
500 Internal Server Error: 서버에서 오류가 발생함.
4. HTTP 헤더
HTTP 요청과 응답에는 다양한 헤더가 포함되어 있어, 추가적인 정보를 제공  

Content-Type: 전송되는 데이터의 유형을 지정.
Content-Length: 전송되는 데이터의 크기를 바이트 단위로 표시.
Authorization: 인증 정보를 포함.
User-Agent: 요청을 보낸 클라이언트의 정보.
 
5. 상태 비저장성  (상태를 저장하지 않음) - ServletContext, HttpSession, HttpServletRequest를 저장소로 사용하고 있다 
HTTP는 기본적으로 상태 비저장(stateless) 프로토콜입니다. 
즉, 각 요청은 독립적이며, 이전 요청과의 상태를 유지하지 않음  이전의 요청에 대한 정보를 기억하지 않는다
이를 통해 서버의 부하를 줄이고 확장성을 높일 수 있음
 
HTTP는 웹의 기본 통신 프로토콜로, 웹 애플리케이션 개발 및 데이터 전송에 필수적인 요소입니다