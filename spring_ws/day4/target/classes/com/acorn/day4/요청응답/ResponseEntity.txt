import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api")
public class MemberController {

    @PostMapping("/member")
    public ResponseEntity<String> createMember(@RequestBody Member member) {
        // 회원 등록 성공
        return ResponseEntity.status(HttpStatus.CREATED).body("회원 등록 완료");
    }

    @GetMapping("/member/{id}")
    public ResponseEntity<Member> getMember(@PathVariable String id) {
        Member member = findMemberById(id); // 회원 조회 로직
        if (member == null) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(null);
        }
        return ResponseEntity.ok(member);
    }
}


///
위의 코드는  대표적인 ResponseEntity의 사용 사례는 HTTP 상태 코드 활용한 예제임
 이를 통해 클라이언트 요청에 대해 적절한 상태 코드를 반환할 수 있다
 
 #####################
서버가 응답하면 무조건 ok로 처리함 
대표적인게 에러처리를 한 경우 
에러이지만 상태코드는 정상으로 응답됨
상태코드를 커스텀할 수 있다


 
